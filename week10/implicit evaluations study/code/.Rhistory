SD = sd(age, na.rm = TRUE)) |>
mutate_all(.funs = janitor::round_half_up, digits = 1) |>
kable() |>
add_header_above(header = c("Age" = 2)) |>
kable_classic(full_width = FALSE)
data_processed_after_exclusions |>
rename(Gender = gender) |>
group_by(Gender) |>
summarise(n = n()) |>
mutate(Percent = paste0(round_half_up((n / sum(n)) * 100, 1), "%")) |>
mutate(Gender = stringr::str_to_sentence(Gender)) |> # Change the case of the Gender variable so that it prints nicely
kable() |>
kable_classic(full_width = FALSE)
# overall self-reported evaluations
dat_mean_ratings <- data_processed_after_exclusions |>
summarise(Mean = mean(mean_evaluation, na.rm = TRUE),
SD = sd(mean_evaluation, na.rm = TRUE),
n = n()) |>
mutate(group = "Full sample")
# self-reported evaluations by gender category
dat_mean_ratings_by_gender <- data_processed_after_exclusions |>
group_by(group = gender) |>
summarise(Mean = mean(mean_evaluation, na.rm = TRUE),
SD = sd(mean_evaluation, na.rm = TRUE),
n = n())
# combine both into one table
bind_rows(dat_mean_ratings,
dat_mean_ratings_by_gender) |>
select(Subset = group, Mean, SD, n) |> # select variables of interest, and rename one
mutate(Subset = stringr::str_to_sentence(Subset)) |> # Change the case of the Subset variable so that it prints nicely
mutate_if(is.numeric, round_half_up, digits = 2) |>
kable() |>
add_header_above(header = c(" " = 1, "Self-reported evaluations" = 3)) |>
kable_classic(full_width = FALSE)
ggplot(data_processed_after_exclusions, aes(x = mean_evaluation)) +
geom_histogram(binwidth = 1,
boundary = 0,
fill = viridis_pal(begin = 0.45, option = "mako")(1),
color = viridis_pal(begin = 0.30, option = "mako")(1)) +
xlab("Mean self-reported evaluation") +
ylab("Frequency") +
theme_linedraw() +
scale_x_continuous(breaks = pretty_breaks(n = 7)) +
coord_cartesian(xlim = c(1, 7)) +
theme(panel.grid.minor = element_blank())
# overall AMP score
dat_amp_score <- data_processed_after_exclusions |>
summarise(Mean = mean(AMP_score, na.rm = TRUE),
SD = sd(AMP_score, na.rm = TRUE),
n = n()) |>
mutate(group = "Full sample")
# self-reported evaluations by gender category
dat_amp_score_by_gender <- data_processed_after_exclusions |>
group_by(group = gender) |>
summarise(Mean = mean(AMP_score, na.rm = TRUE),
SD = sd(AMP_score, na.rm = TRUE),
n = n())
# combine both into one table
bind_rows(dat_amp_score,
dat_amp_score_by_gender) |>
select(Subset = group, Mean, SD, n) |> # select variables of interest, and rename one
mutate(Subset = stringr::str_to_sentence(Subset)) |> # Change the case of the Subset variable so that it prints nicely
mutate_if(is.numeric, round_half_up, digits = 2) |>
kable() |>
add_header_above(header = c(" " = 1, "Self-reported evaluations" = 3)) |>
kable_classic(full_width = FALSE)
ggplot(data_processed_after_exclusions, aes(x = AMP_score)) +
geom_histogram(binwidth = 0.05,
boundary = 0,
fill = viridis_pal(begin = 0.45, option = "mako")(1),
color = viridis_pal(begin = 0.30, option = "mako")(1)) +
xlab("AMP score") +
ylab("Frequency") +
theme_linedraw() +
scale_x_continuous(breaks = pretty_breaks(n = 10))
ggplot(data_processed_after_exclusions,
aes(x = AMP_score,
y = mean_evaluation)) +
geom_jitter(color = viridis_pal(begin = 0.45, option = "mako")(1),
alpha = 0.5) +
geom_smooth(method = "lm",
color = viridis_pal(begin = 0.45, option = "mako")(1)) +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme_linedraw()
ggplot(data_processed_after_exclusions,
aes(y = AMP_score,
x = mean_evaluation)) +
geom_jitter(color = viridis_pal(begin = 0.45, option = "mako")(1),
alpha = 0.5) +
geom_smooth(method = "lm",
color = viridis_pal(begin = 0.45, option = "mako")(1)) +
ylab("AMP score") +
xlab("Mean self-reported evaluation") +
theme_linedraw()
ggplot(data_processed_after_exclusions,
aes(x = AMP_score,
y = mean_evaluation)) +
geom_jitter(color = "black",#viridis_pal(begin = 0.45, option = "mako")(1),
alpha = 0.5) +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme_linedraw()
library(ggExtra)
piris <- ggplot(data_processed_after_exclusions, aes(x = AMP_score, y = mean_evaluation, colour = gender)) +
geom_point() +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme_minimal()
ggMarginal(piris, type = "histogram",groupColour = TRUE, groupFill = TRUE)
library(ggrepel)
# repel <-
ggplot(data_processed_after_exclusions, aes(x = AMP_score, y = mean_evaluation, label = subject, colour = gender)) +
geom_point() +
theme_minimal() +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
geom_text_repel()
library(remotes)
# install.packages("remotes")
remotes::install_github("hughjonesd/ggmagnify")
# Alternatively, install ggmagnify from r-universe:
# install.packages("ggmagnify", repos = c("https://hughjonesd.r-universe.dev",
#                  "https://cloud.r-project.org"))
library(ggmagnify)
ggp <- ggplot(data_processed_after_exclusions, aes(AMP_score, mean_evaluation, label = subject, colour = gender)) +
geom_point() +
scale_y_continuous(breaks = pretty_breaks(n = 7)) +
coord_cartesian(ylim = c(1, 7)) +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme_minimal()#+
# geom_text_repel()
ggp
from <- c(xmin = 0.4, xmax = 0.6, ymin = 1.6, ymax = 3.4)
# Names xmin, xmax, ymin, ymax are optional:
to <- c(0.6,  1, 3.5, 6.5)
ggp + geom_magnify(from = from, to = to)
ggplot(data_processed_after_exclusions, aes(x = mean_evaluation, y = gender, fill = gender)) +
geom_violin(draw_quantiles = .5,
trim = FALSE, alpha = 0.5,) +
scale_x_continuous(breaks = pretty_breaks(n = 7)) +
coord_cartesian(xlim = c(0, 7)) +
labs(title = "Violin Plot of Mean Evaluation") +
xlab("AMP score") +
ylab("Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(y = mean_evaluation, x = gender, fill = gender)) +
geom_violin(draw_quantiles = .5,
trim = FALSE, alpha = 0.5,) +
scale_x_continuous(breaks = pretty_breaks(n = 7)) +
coord_cartesian(xlim = c(0, 7)) +
labs(title = "Violin Plot of Mean Evaluation") +
xlab("AMP score") +
ylab("Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = mean_evaluation, y = gender, fill = gender)) +
geom_violin(draw_quantiles = .5,
trim = FALSE, alpha = 0.5,) +
scale_x_continuous(breaks = pretty_breaks(n = 7)) +
coord_cartesian(xlim = c(0, 7)) +
labs(title = "Violin Plot of Mean Evaluation") +
xlab("AMP score") +
ylab("Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = gender, y = mean_evaluation, fill = gender)) +
geom_violin(draw_quantiles = .5,
trim = FALSE, alpha = 0.5,) +
scale_y_continuous(breaks = pretty_breaks(n = 7)) +
coord_cartesian(ylim = c(0, 7)) +
labs(title = "Violin Plot of Mean Evaluation") +
xlab("AMP score") +
ylab("Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x    = gender,
y    = mean_evaluation,
fill = gender)) +
geom_violin(draw_quantiles = .5,
trim           = TRUE,
alpha          = 0.5,) +
scale_y_continuous(breaks  = pretty_breaks(n = 7)) +
coord_cartesian(ylim       = c(0, 7)) +
labs(title                 = "Violin Plot of Mean Evaluation") +
xlab("AMP score") +
ylab("Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x    = gender,
y    = mean_evaluation,
fill = gender)) +
geom_violin(draw_quantiles = .5,
#trim           = TRUE,
alpha          = 0.5,) +
scale_y_continuous(breaks  = pretty_breaks(n = 7)) +
coord_cartesian(ylim       = c(0, 7)) +
labs(title                 = "Violin Plot of Mean Evaluation") +
xlab("AMP score") +
ylab("Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x    = gender,
y    = mean_evaluation,
fill = gender)) +
geom_violin(draw_quantiles = .5,
trim           = FALSE,
alpha          = 0.5,) +
scale_y_continuous(breaks  = pretty_breaks(n = 7)) +
coord_cartesian(ylim       = c(0, 7)) +
labs(title                 = "Violin Plot of Mean Evaluation") +
xlab("AMP score") +
ylab("Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x    = gender,
y    = mean_evaluation,
fill = gender)) +
geom_violin(draw_quantiles = .3,
trim           = FALSE,
alpha          = 0.5,) +
scale_y_continuous(breaks  = pretty_breaks(n = 7)) +
coord_cartesian(ylim       = c(0, 7)) +
labs(title                 = "Violin Plot of Mean Evaluation") +
xlab("AMP score") +
ylab("Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x    = gender,
y    = mean_evaluation,
fill = gender)) +
geom_violin(draw_quantiles = .1,
trim           = FALSE,
alpha          = 0.5,) +
scale_y_continuous(breaks  = pretty_breaks(n = 7)) +
coord_cartesian(ylim       = c(0, 7)) +
labs(title                 = "Violin Plot of Mean Evaluation") +
xlab("AMP score") +
ylab("Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x    = gender,
y    = mean_evaluation,
fill = gender)) +
geom_violin(draw_quantiles = .5,
trim           = FALSE,
alpha          = 0.5,) +
scale_y_continuous(breaks  = pretty_breaks(n = 7)) +
coord_cartesian(ylim       = c(0, 7)) +
labs(title                 = "Violin Plot of Mean Evaluation") +
xlab("AMP score") +
ylab("Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x    = gender,
y    = mean_evaluation,
fill = gender)) +
geom_violin(draw_quantiles = .5,
trim           = FALSE,
alpha          = 0.5,) +
scale_y_continuous(breaks  = pretty_breaks(n = 7)) +
coord_cartesian(ylim       = c(-1, 7)) +
labs(title                 = "Violin Plot of Mean Evaluation") +
xlab("AMP score") +
ylab("Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x    = gender,
y    = mean_evaluation,
fill = gender)) +
geom_violin(draw_quantiles = .5,
trim           = FALSE,
alpha          = 0.5,) +
scale_y_continuous(breaks  = pretty_breaks(n = 7)) +
coord_cartesian(ylim       = c(-3, 7)) +
labs(title                 = "Violin Plot of Mean Evaluation") +
xlab("AMP score") +
ylab("Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x    = gender,
y    = mean_evaluation,
fill = gender)) +
geom_violin(draw_quantiles = .5,
trim           = FALSE,
alpha          = 0.5,) +
scale_y_continuous(breaks  = pretty_breaks(n = 10)) +
coord_cartesian(ylim       = c(-3, 7)) +
labs(title                 = "Violin Plot of Mean Evaluation") +
xlab("AMP score") +
ylab("Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x    = gender,
y    = mean_evaluation,
fill = gender)) +
geom_violin(draw_quantiles = .5,
trim           = FALSE,
alpha          = 0.5,) +
scale_y_continuous(breaks  = pretty_breaks(n = 10)) +
coord_cartesian(ylim       = c(-3, 10)) +
labs(title                 = "Violin Plot of Mean Evaluation") +
xlab("AMP score") +
ylab("Gender") +
theme_minimal()
View(data_processed_after_exclusions)
ggplot(data_processed_after_exclusions, aes(x    = gender,
y    = mean_evaluation,
fill = gender)) +
geom_violin(draw_quantiles = .5,
trim           = TRUE,
alpha          = 0.5,) +
scale_y_continuous(breaks  = pretty_breaks(n = 10)) +
coord_cartesian(ylim       = c(-3, 10)) +
labs(title                 = "Violin Plot of Mean Evaluation") +
xlab("AMP score") +
ylab("Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x    = gender,
y    = mean_evaluation,
fill = gender)) +
geom_violin(draw_quantiles = .5,
trim           = TRUE,
alpha          = 0.5,) +
scale_y_continuous(breaks  = pretty_breaks(n = 7)) +
coord_cartesian(ylim       = c(0, 7)) +
labs(title                 = "Violin Plot of Mean Evaluation") +
xlab("AMP score") +
ylab("Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x    = gender,
y    = mean_evaluation,
fill = gender)) +
geom_violin(draw_quantiles = .75,
trim           = TRUE,
alpha          = 0.5,) +
scale_y_continuous(breaks  = pretty_breaks(n = 7)) +
coord_cartesian(ylim       = c(0, 7)) +
labs(title                 = "Violin Plot of Mean Evaluation") +
xlab("AMP score") +
ylab("Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x    = gender,
y    = mean_evaluation,
fill = gender)) +
geom_violin(draw_quantiles = .5,
trim           = TRUE,
alpha          = 0.5,) +
scale_y_continuous(breaks  = pretty_breaks(n = 7)) +
coord_cartesian(ylim       = c(0, 7)) +
labs(title                 = "Violin Plot of Mean Evaluation") +
xlab("AMP score") +
ylab("Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x    = gender,
y    = mean_evaluation,
fill = gender)) +
geom_violin(draw_quantiles = .5,
trim           = TRUE,
alpha          = 0.5,) +
scale_y_continuous(breaks  = pretty_breaks(n = 7)) +
coord_cartesian(ylim       = c(0, 7)) +
labs(title                 = "Violin Plot of Mean Evaluation") +
xlab("Mean evaluation") +
ylab("Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x    = gender,
y    = mean_evaluation,
fill = gender)) +
geom_violin(draw_quantiles = .5,
trim           = TRUE,
alpha          = 0.5,) +
scale_y_continuous(breaks  = pretty_breaks(n = 7)) +
coord_cartesian(ylim       = c(0, 7)) +
labs(title                 = "Violin Plot of Mean Evaluation") +
xlab("Gender") +
ylab("Mean Evaluation") +
theme_minimal()
#histogramm
ggplot(data_processed_after_exclusions, aes(x = mean_evaluation, fill = gender)) +
geom_histogram(alpha    = 0.5,
position = "dodge")+#binwidth = 5,
# alpha    = 0.5,
# position = "dodge") +
scale_x_continuous(breaks = pretty_breaks(n = 7)) +
coord_cartesian(xlim = c(1, 7)) +
labs(title = "Violin Plot of Mean Evaluation") +
xlab("AMP score") +
ylab("Gender") +
theme_minimal()
#violin
ggplot(data_processed_after_exclusions, aes(x    = gender,
y    = mean_evaluation,
fill = gender)) +
geom_violin(draw_quantiles = .5,
trim           = TRUE,
alpha          = 0.5,) +
scale_y_continuous(breaks  = pretty_breaks(n = 7)) +
coord_cartesian(ylim       = c(0, 7)) +
labs(title                 = "Violin Plot of Mean Evaluation") +
xlab("Gender") +
ylab("Mean Evaluation") +
theme_minimal()
#raincloud
ggplot(data_processed_after_exclusions, aes(x    = gender,
y    = mean_evaluation,
fill = gender)) +
geom_(draw_quantiles = .5,
trim           = TRUE,
alpha          = 0.5,) +
scale_y_continuous(breaks  = pretty_breaks(n = 7)) +
coord_cartesian(ylim       = c(0, 7)) +
labs(title                 = "Violin Plot of Mean Evaluation") +
xlab("Gender") +
ylab("Mean Evaluation") +
theme_minimal()
library(ggExtra)
piris <- ggplot(data_processed_after_exclusions, aes(x = AMP_score, y = mean_evaluation, colour = gender)) +
geom_point() +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme_minimal()
ggMarginal(piris, type = "histogram",groupColour = TRUE, groupFill = TRUE)
library(ggExtra)
piris <- ggplot(data_processed_after_exclusions, aes(x = AMP_score, y = mean_evaluation, colour = gender)) +
geom_point() +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme_minimal()
ggMarginal(piris, type = "histogram",groupColour = TRUE, groupFill = TRUE)
piris2 <- ggplot(data_processed_after_exclusions, aes(x = AMP_score, y = mean_evaluation, colour = gender)) +
geom_point() +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme_minimal()
ggMarginal(piris2, groupColour = TRUE, groupFill = TRUE)
install.packages("PupillometryR")
ggplot(data_processed_after_exclusions, aes(x = gender, y = mean_evaluation, fill = gender)) +
geom_flat_violin(position = position_nudge(x = 0.2, y = 0)) +
geom_point(position = position_jitter(width = 0.15), size = 1, alpha = 0.8) +
geom_boxplot(width = 0.1, outlier.shape = NA, position = position_nudge(x = -0.2, y = 0)) +
theme_minimal()
library(PupillometryR)
ggplot(data_processed_after_exclusions, aes(x = gender, y = mean_evaluation, fill = gender)) +
geom_flat_violin(position = position_nudge(x = 0.2, y = 0)) +
geom_point(position = position_jitter(width = 0.15), size = 1, alpha = 0.8) +
geom_boxplot(width = 0.1, outlier.shape = NA, position = position_nudge(x = -0.2, y = 0)) +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(y = gender, x = mean_evaluation, fill = gender)) +
geom_flat_violin(position = position_nudge(y = 0.2, x = 0)) +
geom_point(position = position_jitter(width = 0.15), size = 1, alpha = 0.8) +
geom_boxplot(width = 0.1, outlier.shape = NA, position = position_nudge(y = -0.2, x = 0)) +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = gender, y = mean_evaluation, fill = gender)) +
geom_flat_violin(position = position_nudge(x = 0.2, y = 0)) +
geom_point(position = position_jitter(width = 0.15), size = 1, alpha = 0.8) +
geom_boxplot(width = 0.1, outlier.shape = NA, position = position_nudge(x = -0.2, y = 0)) +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(y = gender, x = mean_evaluation, fill = gender)) +
geom_flat_violin(position = position_nudge(y = 0.2, x = 0), scale = "width", trim = FALSE) +
geom_point(position = position_jitter(height = 0.15), size = 1, alpha = 0.8) +
geom_boxplot(width = 0.1, outlier.shape = NA, position = position_nudge(y = -0.2, x = 0)) +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = gender, y = mean_evaluation, fill = gender)) +
geom_flat_violin(position = position_nudge(x = 0.2, y = 0)) +
geom_point(position = position_jitter(width = 0.15), size = 1, alpha = 0.8) +
geom_boxplot(width = 0.1, outlier.shape = NA, position = position_nudge(x = -0.2, y = 0)) +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(y = gender, x = mean_evaluation, fill = gender)) +
geom_flat_violin(position = position_nudge(y = 0.2, x = 0), scale = "width", trim = FALSE) +
geom_point(position = position_jitter(height = 0.15), size = 1, alpha = 0.8) +
geom_boxplot(width = 0.1, outlier.shape = NA, position = position_nudge(y = -0.2, x = 0)) +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = gender, y = mean_evaluation, fill = gender)) +
geom_flat_violin(position = position_nudge(x = 0.2, y = 0)) +
geom_point(position = position_jitter(width = 0.15), size = 1, alpha = 0.8) +
geom_boxplot(width = 0.1, outlier.shape = NA, position = position_nudge(x = -0.2, y = 0)) +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = gender, y = mean_evaluation, fill = gender)) +
geom_flat_violin(position = position_nudge(x = 0.2, y = 0)) +
geom_point(position = position_jitter(width = 0.15), size = 1, alpha = 0.8) +
geom_boxplot(width = 0.1, outlier.shape = NA, position = position_nudge(x = -0.2, y = 0)) +
scale_x_continuous(breaks = pretty_breaks(n = 7)) +
coord_cartesian(xlim = c(1, 7)) +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = gender, y = mean_evaluation, fill = gender)) +
geom_flat_violin(position = position_nudge(x = 0.2, y = 0)) +
scale_x_continuous(breaks = pretty_breaks(n = 7)) +
coord_cartesian(xlim = c(1, 7)) +
geom_point(position = position_jitter(width = 0.15), size = 1, alpha = 0.8) +
geom_boxplot(width = 0.1, outlier.shape = NA, position = position_nudge(x = -0.2, y = 0)) +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = gender, y = mean_evaluation, fill = gender)) +
scale_x_continuous(breaks = pretty_breaks(n = 7)) +
coord_cartesian(xlim = c(1, 7)) +
geom_flat_violin(position = position_nudge(x = 0.2, y = 0)) +
geom_point(position = position_jitter(width = 0.15), size = 1, alpha = 0.8) +
geom_boxplot(width = 0.1, outlier.shape = NA, position = position_nudge(x = -0.2, y = 0)) +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = gender, y = mean_evaluation, fill = gender)) +
geom_flat_violin(position = position_nudge(x = 0.2, y = 0)) +
geom_point(position = position_jitter(width = 0.15), size = 1, alpha = 0.8) +
geom_boxplot(width = 0.1, outlier.shape = NA, position = position_nudge(x = -0.2, y = 0)) +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(y = gender, x = mean_evaluation, fill = gender)) +
geom_flat_violin(position = position_nudge(y = 0.2, x = 0), scale = "width", trim = FALSE) +
scale_x_continuous(breaks = pretty_breaks(n = 7)) +
coord_cartesian(xlim = c(1, 7)) +
geom_point(position = position_jitter(height = 0.15), size = 1, alpha = 0.8) +
geom_boxplot(width = 0.1, outlier.shape = NA, position = position_nudge(y = -0.2, x = 0)) +
theme_minimal()
# Horizontal Raincloud Plot with Adjusted Violin Scale
ggplot(data_processed_after_exclusions, aes(y = gender, x = mean_evaluation, fill = gender)) +
geom_violin(scale = "width", trim = FALSE) +  # Adjust scale here
geom_point(position = position_jitter(height = 0.15), size = 1, alpha = 0.8) +
geom_boxplot(width = 0.1, outlier.shape = NA, position = position_nudge(y = -0.2, x = 0)) +
coord_flip() +  # Flips the coordinates for horizontal orientation
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = gender, y = mean_evaluation, fill = gender)) +
geom_flat_violin(position = position_nudge(x = 0.2, y = 0)) +
geom_point(position = position_jitter(width = 0.15), size = 1, alpha = 0.8) +
geom_boxplot(width = 0.1, outlier.shape = NA, position = position_nudge(x = -0.2, y = 0)) +
theme_minimal()
